
Driver_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000550  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  4 .ARM          00000000  080006f8  080006f8  00010700  2**0
                  CONTENTS
  5 .preinit_array 00000000  080006f8  08000700  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006f8  080006f8  000106f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080006fc  080006fc  000106fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010700  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000700  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000700  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010700  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000075e  00000000  00000000  0001072a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001ee  00000000  00000000  00010e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a0  00000000  00000000  00011078  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000078  00000000  00000000  00011118  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000120a  00000000  00000000  00011190  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000009c5  00000000  00000000  0001239a  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00004c4c  00000000  00000000  00012d5f  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000179ab  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001ac  00000000  00000000  00017a28  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080006e0 	.word	0x080006e0

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	080006e0 	.word	0x080006e0

080001e8 <GPIO_PeriClockControl>:
 */

#include "STM32FXX_GPIO_DRIVER.h"

void GPIO_PeriClockControl(GPIO_Reg_def_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d163      	bne.n	80002c2 <GPIO_PeriClockControl+0xda>
	{
		if(pGPIOx==GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a7f      	ldr	r2, [pc, #508]	; (80003fc <GPIO_PeriClockControl+0x214>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLOCK_EN();
 8000202:	4b7f      	ldr	r3, [pc, #508]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a7e      	ldr	r2, [pc, #504]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
				else if(pGPIOx==GPIOI)
				{
					GPIOI_PCLOCK_DI();
				}
	}
}
 800020e:	e0f0      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a7c      	ldr	r2, [pc, #496]	; (8000404 <GPIO_PeriClockControl+0x21c>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLOCK_EN();
 8000218:	4b79      	ldr	r3, [pc, #484]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a78      	ldr	r2, [pc, #480]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0e5      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a77      	ldr	r2, [pc, #476]	; (8000408 <GPIO_PeriClockControl+0x220>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLOCK_EN();
 800022e:	4b74      	ldr	r3, [pc, #464]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a73      	ldr	r2, [pc, #460]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0da      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a73      	ldr	r2, [pc, #460]	; (800040c <GPIO_PeriClockControl+0x224>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLOCK_EN();
 8000244:	4b6e      	ldr	r3, [pc, #440]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a6d      	ldr	r2, [pc, #436]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e0cf      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a6e      	ldr	r2, [pc, #440]	; (8000410 <GPIO_PeriClockControl+0x228>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLOCK_EN();
 800025a:	4b69      	ldr	r3, [pc, #420]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a68      	ldr	r2, [pc, #416]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e0c4      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a6a      	ldr	r2, [pc, #424]	; (8000414 <GPIO_PeriClockControl+0x22c>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLOCK_EN();
 8000270:	4b63      	ldr	r3, [pc, #396]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a62      	ldr	r2, [pc, #392]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e0b9      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a65      	ldr	r2, [pc, #404]	; (8000418 <GPIO_PeriClockControl+0x230>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLOCK_EN();
 8000286:	4b5e      	ldr	r3, [pc, #376]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a5d      	ldr	r2, [pc, #372]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e0ae      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a61      	ldr	r2, [pc, #388]	; (800041c <GPIO_PeriClockControl+0x234>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLOCK_EN();
 800029c:	4b58      	ldr	r3, [pc, #352]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a57      	ldr	r2, [pc, #348]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e0a3      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		else if(pGPIOx==GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a5c      	ldr	r2, [pc, #368]	; (8000420 <GPIO_PeriClockControl+0x238>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	f040 809f 	bne.w	80003f2 <GPIO_PeriClockControl+0x20a>
			GPIOI_PCLOCK_EN();
 80002b4:	4b52      	ldr	r3, [pc, #328]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a51      	ldr	r2, [pc, #324]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	e097      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
		if(pGPIOx==GPIOA)
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a4d      	ldr	r2, [pc, #308]	; (80003fc <GPIO_PeriClockControl+0x214>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d10c      	bne.n	80002e4 <GPIO_PeriClockControl+0xfc>
					GPIOA_PCLOCK_DI();
 80002ca:	4b4d      	ldr	r3, [pc, #308]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002cc:	691b      	ldr	r3, [r3, #16]
 80002ce:	4a4c      	ldr	r2, [pc, #304]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002d0:	f043 0301 	orr.w	r3, r3, #1
 80002d4:	6113      	str	r3, [r2, #16]
 80002d6:	4b4a      	ldr	r3, [pc, #296]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002d8:	691b      	ldr	r3, [r3, #16]
 80002da:	4a49      	ldr	r2, [pc, #292]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002dc:	f023 0301 	bic.w	r3, r3, #1
 80002e0:	6113      	str	r3, [r2, #16]
}
 80002e2:	e086      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOB)
 80002e4:	687b      	ldr	r3, [r7, #4]
 80002e6:	4a47      	ldr	r2, [pc, #284]	; (8000404 <GPIO_PeriClockControl+0x21c>)
 80002e8:	4293      	cmp	r3, r2
 80002ea:	d10c      	bne.n	8000306 <GPIO_PeriClockControl+0x11e>
					GPIOB_PCLOCK_DI();
 80002ec:	4b44      	ldr	r3, [pc, #272]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002ee:	691b      	ldr	r3, [r3, #16]
 80002f0:	4a43      	ldr	r2, [pc, #268]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002f2:	f043 0302 	orr.w	r3, r3, #2
 80002f6:	6113      	str	r3, [r2, #16]
 80002f8:	4b41      	ldr	r3, [pc, #260]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002fa:	691b      	ldr	r3, [r3, #16]
 80002fc:	4a40      	ldr	r2, [pc, #256]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80002fe:	f023 0302 	bic.w	r3, r3, #2
 8000302:	6113      	str	r3, [r2, #16]
}
 8000304:	e075      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOC)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	4a3f      	ldr	r2, [pc, #252]	; (8000408 <GPIO_PeriClockControl+0x220>)
 800030a:	4293      	cmp	r3, r2
 800030c:	d10c      	bne.n	8000328 <GPIO_PeriClockControl+0x140>
					GPIOC_PCLOCK_DI();
 800030e:	4b3c      	ldr	r3, [pc, #240]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000310:	691b      	ldr	r3, [r3, #16]
 8000312:	4a3b      	ldr	r2, [pc, #236]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000314:	f043 0304 	orr.w	r3, r3, #4
 8000318:	6113      	str	r3, [r2, #16]
 800031a:	4b39      	ldr	r3, [pc, #228]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800031c:	691b      	ldr	r3, [r3, #16]
 800031e:	4a38      	ldr	r2, [pc, #224]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000320:	f023 0304 	bic.w	r3, r3, #4
 8000324:	6113      	str	r3, [r2, #16]
}
 8000326:	e064      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOD)
 8000328:	687b      	ldr	r3, [r7, #4]
 800032a:	4a38      	ldr	r2, [pc, #224]	; (800040c <GPIO_PeriClockControl+0x224>)
 800032c:	4293      	cmp	r3, r2
 800032e:	d10c      	bne.n	800034a <GPIO_PeriClockControl+0x162>
					GPIOD_PCLOCK_DI();
 8000330:	4b33      	ldr	r3, [pc, #204]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000332:	691b      	ldr	r3, [r3, #16]
 8000334:	4a32      	ldr	r2, [pc, #200]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000336:	f043 0308 	orr.w	r3, r3, #8
 800033a:	6113      	str	r3, [r2, #16]
 800033c:	4b30      	ldr	r3, [pc, #192]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800033e:	691b      	ldr	r3, [r3, #16]
 8000340:	4a2f      	ldr	r2, [pc, #188]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000342:	f023 0308 	bic.w	r3, r3, #8
 8000346:	6113      	str	r3, [r2, #16]
}
 8000348:	e053      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOE)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a30      	ldr	r2, [pc, #192]	; (8000410 <GPIO_PeriClockControl+0x228>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d10c      	bne.n	800036c <GPIO_PeriClockControl+0x184>
					GPIOE_PCLOCK_DI();
 8000352:	4b2b      	ldr	r3, [pc, #172]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000354:	691b      	ldr	r3, [r3, #16]
 8000356:	4a2a      	ldr	r2, [pc, #168]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000358:	f043 0310 	orr.w	r3, r3, #16
 800035c:	6113      	str	r3, [r2, #16]
 800035e:	4b28      	ldr	r3, [pc, #160]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000360:	691b      	ldr	r3, [r3, #16]
 8000362:	4a27      	ldr	r2, [pc, #156]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000364:	f023 0310 	bic.w	r3, r3, #16
 8000368:	6113      	str	r3, [r2, #16]
}
 800036a:	e042      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOF)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a29      	ldr	r2, [pc, #164]	; (8000414 <GPIO_PeriClockControl+0x22c>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d10c      	bne.n	800038e <GPIO_PeriClockControl+0x1a6>
					GPIOF_PCLOCK_DI();
 8000374:	4b22      	ldr	r3, [pc, #136]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000376:	691b      	ldr	r3, [r3, #16]
 8000378:	4a21      	ldr	r2, [pc, #132]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800037a:	f043 0320 	orr.w	r3, r3, #32
 800037e:	6113      	str	r3, [r2, #16]
 8000380:	4b1f      	ldr	r3, [pc, #124]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000382:	691b      	ldr	r3, [r3, #16]
 8000384:	4a1e      	ldr	r2, [pc, #120]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000386:	f023 0320 	bic.w	r3, r3, #32
 800038a:	6113      	str	r3, [r2, #16]
}
 800038c:	e031      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOG)
 800038e:	687b      	ldr	r3, [r7, #4]
 8000390:	4a21      	ldr	r2, [pc, #132]	; (8000418 <GPIO_PeriClockControl+0x230>)
 8000392:	4293      	cmp	r3, r2
 8000394:	d10c      	bne.n	80003b0 <GPIO_PeriClockControl+0x1c8>
					GPIOG_PCLOCK_DI();
 8000396:	4b1a      	ldr	r3, [pc, #104]	; (8000400 <GPIO_PeriClockControl+0x218>)
 8000398:	691b      	ldr	r3, [r3, #16]
 800039a:	4a19      	ldr	r2, [pc, #100]	; (8000400 <GPIO_PeriClockControl+0x218>)
 800039c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003a0:	6113      	str	r3, [r2, #16]
 80003a2:	4b17      	ldr	r3, [pc, #92]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003a4:	691b      	ldr	r3, [r3, #16]
 80003a6:	4a16      	ldr	r2, [pc, #88]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003a8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80003ac:	6113      	str	r3, [r2, #16]
}
 80003ae:	e020      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOH)
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	4a1a      	ldr	r2, [pc, #104]	; (800041c <GPIO_PeriClockControl+0x234>)
 80003b4:	4293      	cmp	r3, r2
 80003b6:	d10c      	bne.n	80003d2 <GPIO_PeriClockControl+0x1ea>
					GPIOH_PCLOCK_DI();
 80003b8:	4b11      	ldr	r3, [pc, #68]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003ba:	691b      	ldr	r3, [r3, #16]
 80003bc:	4a10      	ldr	r2, [pc, #64]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003be:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003c2:	6113      	str	r3, [r2, #16]
 80003c4:	4b0e      	ldr	r3, [pc, #56]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003c6:	691b      	ldr	r3, [r3, #16]
 80003c8:	4a0d      	ldr	r2, [pc, #52]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003ca:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80003ce:	6113      	str	r3, [r2, #16]
}
 80003d0:	e00f      	b.n	80003f2 <GPIO_PeriClockControl+0x20a>
				else if(pGPIOx==GPIOI)
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a12      	ldr	r2, [pc, #72]	; (8000420 <GPIO_PeriClockControl+0x238>)
 80003d6:	4293      	cmp	r3, r2
 80003d8:	d10b      	bne.n	80003f2 <GPIO_PeriClockControl+0x20a>
					GPIOI_PCLOCK_DI();
 80003da:	4b09      	ldr	r3, [pc, #36]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003dc:	691b      	ldr	r3, [r3, #16]
 80003de:	4a08      	ldr	r2, [pc, #32]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003e0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003e4:	6113      	str	r3, [r2, #16]
 80003e6:	4b06      	ldr	r3, [pc, #24]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003e8:	691b      	ldr	r3, [r3, #16]
 80003ea:	4a05      	ldr	r2, [pc, #20]	; (8000400 <GPIO_PeriClockControl+0x218>)
 80003ec:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80003f0:	6113      	str	r3, [r2, #16]
}
 80003f2:	bf00      	nop
 80003f4:	370c      	adds	r7, #12
 80003f6:	46bd      	mov	sp, r7
 80003f8:	bc80      	pop	{r7}
 80003fa:	4770      	bx	lr
 80003fc:	40020000 	.word	0x40020000
 8000400:	40023800 	.word	0x40023800
 8000404:	40020400 	.word	0x40020400
 8000408:	40020800 	.word	0x40020800
 800040c:	40020c00 	.word	0x40020c00
 8000410:	40021000 	.word	0x40021000
 8000414:	40021400 	.word	0x40021400
 8000418:	40021800 	.word	0x40021800
 800041c:	40021c00 	.word	0x40021c00
 8000420:	40022000 	.word	0x40022000

08000424 <GPIO_Init>:

void GPIO_Init (GPIO_HANDLE_t *pGPIOHandle)
{
 8000424:	b480      	push	{r7}
 8000426:	b087      	sub	sp, #28
 8000428:	af00      	add	r7, sp, #0
 800042a:	6078      	str	r0, [r7, #4]
	//1.Configuring the mode
	uint32_t temp=0;
 800042c:	2300      	movs	r3, #0
 800042e:	617b      	str	r3, [r7, #20]
	if((pGPIOHandle->PIN_CONGFIG.GPIO_PinMode)<=GPIO_Pin_Mode_Analog)
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	795b      	ldrb	r3, [r3, #5]
 8000434:	2b03      	cmp	r3, #3
 8000436:	d810      	bhi.n	800045a <GPIO_Init+0x36>
	{
		temp = pGPIOHandle->PIN_CONGFIG.GPIO_PinMode << (2*pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber);
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	795b      	ldrb	r3, [r3, #5]
 800043c:	461a      	mov	r2, r3
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	791b      	ldrb	r3, [r3, #4]
 8000442:	005b      	lsls	r3, r3, #1
 8000444:	fa02 f303 	lsl.w	r3, r2, r3
 8000448:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	6819      	ldr	r1, [r3, #0]
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	697a      	ldr	r2, [r7, #20]
 8000456:	430a      	orrs	r2, r1
 8000458:	601a      	str	r2, [r3, #0]

	}

	//2.Configuring the speed
	temp=0;
 800045a:	2300      	movs	r3, #0
 800045c:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->PIN_CONGFIG.GPIO_PinSpeed << (2*pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber);
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	799b      	ldrb	r3, [r3, #6]
 8000462:	461a      	mov	r2, r3
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	791b      	ldrb	r3, [r3, #4]
 8000468:	005b      	lsls	r3, r3, #1
 800046a:	fa02 f303 	lsl.w	r3, r2, r3
 800046e:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	6899      	ldr	r1, [r3, #8]
 8000476:	687b      	ldr	r3, [r7, #4]
 8000478:	681b      	ldr	r3, [r3, #0]
 800047a:	697a      	ldr	r2, [r7, #20]
 800047c:	430a      	orrs	r2, r1
 800047e:	609a      	str	r2, [r3, #8]

	//3.Configuring output type
	temp=0;
 8000480:	2300      	movs	r3, #0
 8000482:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->PIN_CONGFIG.GPIO_PinOPType << (pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber);
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	7a1b      	ldrb	r3, [r3, #8]
 8000488:	461a      	mov	r2, r3
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	791b      	ldrb	r3, [r3, #4]
 800048e:	fa02 f303 	lsl.w	r3, r2, r3
 8000492:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000494:	687b      	ldr	r3, [r7, #4]
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	6859      	ldr	r1, [r3, #4]
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	697a      	ldr	r2, [r7, #20]
 80004a0:	430a      	orrs	r2, r1
 80004a2:	605a      	str	r2, [r3, #4]

	//4.Configuring pin PuPd Control
	temp=0;
 80004a4:	2300      	movs	r3, #0
 80004a6:	617b      	str	r3, [r7, #20]
	temp = pGPIOHandle->PIN_CONGFIG.GPIO_PinPuPdControl<< (2*pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber);
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	79db      	ldrb	r3, [r3, #7]
 80004ac:	461a      	mov	r2, r3
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	791b      	ldrb	r3, [r3, #4]
 80004b2:	005b      	lsls	r3, r3, #1
 80004b4:	fa02 f303 	lsl.w	r3, r2, r3
 80004b8:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	68d9      	ldr	r1, [r3, #12]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	697a      	ldr	r2, [r7, #20]
 80004c6:	430a      	orrs	r2, r1
 80004c8:	60da      	str	r2, [r3, #12]

	//5. Alternate Functions
	if(pGPIOHandle->PIN_CONGFIG.GPIO_PinMode==GPIO_Pin_Mode_Altfn)
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	795b      	ldrb	r3, [r3, #5]
 80004ce:	2b02      	cmp	r3, #2
 80004d0:	d122      	bne.n	8000518 <GPIO_Init+0xf4>
	{
	uint32_t temp1=0;
 80004d2:	2300      	movs	r3, #0
 80004d4:	613b      	str	r3, [r7, #16]
	uint32_t temp2=0;
 80004d6:	2300      	movs	r3, #0
 80004d8:	60fb      	str	r3, [r7, #12]
	temp1 = pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber/8;
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	791b      	ldrb	r3, [r3, #4]
 80004de:	08db      	lsrs	r3, r3, #3
 80004e0:	b2db      	uxtb	r3, r3
 80004e2:	613b      	str	r3, [r7, #16]
	temp2 = pGPIOHandle->PIN_CONGFIG.GPIO_PinNumber%8;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	f003 0307 	and.w	r3, r3, #7
 80004ec:	60fb      	str	r3, [r7, #12]
    pGPIOHandle->pGPIOx->AFR[temp1]|=pGPIOHandle->PIN_CONGFIG.GPIO_PinAltFunMode<<(4*temp2);
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	693a      	ldr	r2, [r7, #16]
 80004f4:	3208      	adds	r2, #8
 80004f6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	7a5b      	ldrb	r3, [r3, #9]
 80004fe:	4619      	mov	r1, r3
 8000500:	68fb      	ldr	r3, [r7, #12]
 8000502:	009b      	lsls	r3, r3, #2
 8000504:	fa01 f303 	lsl.w	r3, r1, r3
 8000508:	4619      	mov	r1, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	4311      	orrs	r1, r2
 8000510:	693a      	ldr	r2, [r7, #16]
 8000512:	3208      	adds	r2, #8
 8000514:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}

}
 8000518:	bf00      	nop
 800051a:	371c      	adds	r7, #28
 800051c:	46bd      	mov	sp, r7
 800051e:	bc80      	pop	{r7}
 8000520:	4770      	bx	lr

08000522 <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;

}

void GPIO_ToggleOutputPin(GPIO_Reg_def_t *pGPIOx,uint8_t PinNumber)
{
 8000522:	b480      	push	{r7}
 8000524:	b083      	sub	sp, #12
 8000526:	af00      	add	r7, sp, #0
 8000528:	6078      	str	r0, [r7, #4]
 800052a:	460b      	mov	r3, r1
 800052c:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR = pGPIOx->ODR^(1<<PinNumber);
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	695b      	ldr	r3, [r3, #20]
 8000532:	78fa      	ldrb	r2, [r7, #3]
 8000534:	2101      	movs	r1, #1
 8000536:	fa01 f202 	lsl.w	r2, r1, r2
 800053a:	405a      	eors	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	615a      	str	r2, [r3, #20]

}
 8000540:	bf00      	nop
 8000542:	370c      	adds	r7, #12
 8000544:	46bd      	mov	sp, r7
 8000546:	bc80      	pop	{r7}
 8000548:	4770      	bx	lr
	...

0800054c <delay>:
 */

#include "STM32F4XX.h"

void delay(void)
{
 800054c:	b480      	push	{r7}
 800054e:	b083      	sub	sp, #12
 8000550:	af00      	add	r7, sp, #0
	for(uint32_t i=0;i<500000;i++)
 8000552:	2300      	movs	r3, #0
 8000554:	607b      	str	r3, [r7, #4]
 8000556:	e002      	b.n	800055e <delay+0x12>
 8000558:	687b      	ldr	r3, [r7, #4]
 800055a:	3301      	adds	r3, #1
 800055c:	607b      	str	r3, [r7, #4]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	4a03      	ldr	r2, [pc, #12]	; (8000570 <delay+0x24>)
 8000562:	4293      	cmp	r3, r2
 8000564:	d9f8      	bls.n	8000558 <delay+0xc>
	{
		;
	}
}
 8000566:	bf00      	nop
 8000568:	370c      	adds	r7, #12
 800056a:	46bd      	mov	sp, r7
 800056c:	bc80      	pop	{r7}
 800056e:	4770      	bx	lr
 8000570:	0007a11f 	.word	0x0007a11f

08000574 <main>:

int main()
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b084      	sub	sp, #16
 8000578:	af00      	add	r7, sp, #0
GPIO_HANDLE_t GPIO_LED;

GPIO_LED.pGPIOx = GPIOD;
 800057a:	4b31      	ldr	r3, [pc, #196]	; (8000640 <main+0xcc>)
 800057c:	607b      	str	r3, [r7, #4]
GPIO_LED.PIN_CONGFIG.GPIO_PinNumber = GPIO_Pin_Number_15;
 800057e:	230f      	movs	r3, #15
 8000580:	723b      	strb	r3, [r7, #8]
GPIO_LED.PIN_CONGFIG.GPIO_PinMode = GPIO_Pin_Mode_Out;
 8000582:	2301      	movs	r3, #1
 8000584:	727b      	strb	r3, [r7, #9]
GPIO_LED.PIN_CONGFIG.GPIO_PinSpeed = GPIO_Pin_Speed_Fast;
 8000586:	2302      	movs	r3, #2
 8000588:	72bb      	strb	r3, [r7, #10]
GPIO_LED.PIN_CONGFIG.GPIO_PinOPType = GPIO_Pin_PP;
 800058a:	2300      	movs	r3, #0
 800058c:	733b      	strb	r3, [r7, #12]
GPIO_LED.PIN_CONGFIG.GPIO_PinPuPdControl=GPIO_Pin_PU;
 800058e:	2301      	movs	r3, #1
 8000590:	72fb      	strb	r3, [r7, #11]
GPIO_PeriClockControl(GPIOD, ENABLE);
 8000592:	2101      	movs	r1, #1
 8000594:	482a      	ldr	r0, [pc, #168]	; (8000640 <main+0xcc>)
 8000596:	f7ff fe27 	bl	80001e8 <GPIO_PeriClockControl>
GPIO_Init(&GPIO_LED);
 800059a:	1d3b      	adds	r3, r7, #4
 800059c:	4618      	mov	r0, r3
 800059e:	f7ff ff41 	bl	8000424 <GPIO_Init>

GPIO_LED.PIN_CONGFIG.GPIO_PinNumber = GPIO_Pin_Number_12;
 80005a2:	230c      	movs	r3, #12
 80005a4:	723b      	strb	r3, [r7, #8]
GPIO_LED.PIN_CONGFIG.GPIO_PinMode = GPIO_Pin_Mode_Out;
 80005a6:	2301      	movs	r3, #1
 80005a8:	727b      	strb	r3, [r7, #9]
GPIO_LED.PIN_CONGFIG.GPIO_PinSpeed = GPIO_Pin_Speed_Fast;
 80005aa:	2302      	movs	r3, #2
 80005ac:	72bb      	strb	r3, [r7, #10]
GPIO_LED.PIN_CONGFIG.GPIO_PinOPType = GPIO_Pin_PP;
 80005ae:	2300      	movs	r3, #0
 80005b0:	733b      	strb	r3, [r7, #12]
GPIO_LED.PIN_CONGFIG.GPIO_PinPuPdControl=GPIO_Pin_PU;
 80005b2:	2301      	movs	r3, #1
 80005b4:	72fb      	strb	r3, [r7, #11]
GPIO_PeriClockControl(GPIOD, ENABLE);
 80005b6:	2101      	movs	r1, #1
 80005b8:	4821      	ldr	r0, [pc, #132]	; (8000640 <main+0xcc>)
 80005ba:	f7ff fe15 	bl	80001e8 <GPIO_PeriClockControl>
GPIO_Init(&GPIO_LED);
 80005be:	1d3b      	adds	r3, r7, #4
 80005c0:	4618      	mov	r0, r3
 80005c2:	f7ff ff2f 	bl	8000424 <GPIO_Init>

GPIO_LED.PIN_CONGFIG.GPIO_PinNumber = GPIO_Pin_Number_13;
 80005c6:	230d      	movs	r3, #13
 80005c8:	723b      	strb	r3, [r7, #8]
GPIO_LED.PIN_CONGFIG.GPIO_PinMode = GPIO_Pin_Mode_Out;
 80005ca:	2301      	movs	r3, #1
 80005cc:	727b      	strb	r3, [r7, #9]
GPIO_LED.PIN_CONGFIG.GPIO_PinSpeed = GPIO_Pin_Speed_Fast;
 80005ce:	2302      	movs	r3, #2
 80005d0:	72bb      	strb	r3, [r7, #10]
GPIO_LED.PIN_CONGFIG.GPIO_PinOPType = GPIO_Pin_PP;
 80005d2:	2300      	movs	r3, #0
 80005d4:	733b      	strb	r3, [r7, #12]
GPIO_LED.PIN_CONGFIG.GPIO_PinPuPdControl=GPIO_Pin_PU;
 80005d6:	2301      	movs	r3, #1
 80005d8:	72fb      	strb	r3, [r7, #11]

GPIO_PeriClockControl(GPIOD, ENABLE);
 80005da:	2101      	movs	r1, #1
 80005dc:	4818      	ldr	r0, [pc, #96]	; (8000640 <main+0xcc>)
 80005de:	f7ff fe03 	bl	80001e8 <GPIO_PeriClockControl>
GPIO_Init(&GPIO_LED);
 80005e2:	1d3b      	adds	r3, r7, #4
 80005e4:	4618      	mov	r0, r3
 80005e6:	f7ff ff1d 	bl	8000424 <GPIO_Init>
GPIO_LED.PIN_CONGFIG.GPIO_PinNumber = GPIO_Pin_Number_14;
 80005ea:	230e      	movs	r3, #14
 80005ec:	723b      	strb	r3, [r7, #8]
GPIO_LED.PIN_CONGFIG.GPIO_PinMode = GPIO_Pin_Mode_Out;
 80005ee:	2301      	movs	r3, #1
 80005f0:	727b      	strb	r3, [r7, #9]
GPIO_LED.PIN_CONGFIG.GPIO_PinSpeed = GPIO_Pin_Speed_Fast;
 80005f2:	2302      	movs	r3, #2
 80005f4:	72bb      	strb	r3, [r7, #10]
GPIO_LED.PIN_CONGFIG.GPIO_PinOPType = GPIO_Pin_PP;
 80005f6:	2300      	movs	r3, #0
 80005f8:	733b      	strb	r3, [r7, #12]
GPIO_LED.PIN_CONGFIG.GPIO_PinPuPdControl=GPIO_Pin_PU;
 80005fa:	2301      	movs	r3, #1
 80005fc:	72fb      	strb	r3, [r7, #11]




GPIO_PeriClockControl(GPIOD, ENABLE);
 80005fe:	2101      	movs	r1, #1
 8000600:	480f      	ldr	r0, [pc, #60]	; (8000640 <main+0xcc>)
 8000602:	f7ff fdf1 	bl	80001e8 <GPIO_PeriClockControl>
GPIO_Init(&GPIO_LED);
 8000606:	1d3b      	adds	r3, r7, #4
 8000608:	4618      	mov	r0, r3
 800060a:	f7ff ff0b 	bl	8000424 <GPIO_Init>

while(1)
{
	GPIO_ToggleOutputPin(GPIOD, 13);
 800060e:	210d      	movs	r1, #13
 8000610:	480b      	ldr	r0, [pc, #44]	; (8000640 <main+0xcc>)
 8000612:	f7ff ff86 	bl	8000522 <GPIO_ToggleOutputPin>
	delay();
 8000616:	f7ff ff99 	bl	800054c <delay>
	GPIO_ToggleOutputPin(GPIOD, 12);
 800061a:	210c      	movs	r1, #12
 800061c:	4808      	ldr	r0, [pc, #32]	; (8000640 <main+0xcc>)
 800061e:	f7ff ff80 	bl	8000522 <GPIO_ToggleOutputPin>
	delay();
 8000622:	f7ff ff93 	bl	800054c <delay>
	GPIO_ToggleOutputPin(GPIOD, 14);
 8000626:	210e      	movs	r1, #14
 8000628:	4805      	ldr	r0, [pc, #20]	; (8000640 <main+0xcc>)
 800062a:	f7ff ff7a 	bl	8000522 <GPIO_ToggleOutputPin>
	delay();
 800062e:	f7ff ff8d 	bl	800054c <delay>
	GPIO_ToggleOutputPin(GPIOD, 15);
 8000632:	210f      	movs	r1, #15
 8000634:	4802      	ldr	r0, [pc, #8]	; (8000640 <main+0xcc>)
 8000636:	f7ff ff74 	bl	8000522 <GPIO_ToggleOutputPin>
	delay();
 800063a:	f7ff ff87 	bl	800054c <delay>
	GPIO_ToggleOutputPin(GPIOD, 13);
 800063e:	e7e6      	b.n	800060e <main+0x9a>
 8000640:	40020c00 	.word	0x40020c00

08000644 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000644:	480d      	ldr	r0, [pc, #52]	; (800067c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000646:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000648:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800064c:	480c      	ldr	r0, [pc, #48]	; (8000680 <LoopForever+0x6>)
  ldr r1, =_edata
 800064e:	490d      	ldr	r1, [pc, #52]	; (8000684 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000650:	4a0d      	ldr	r2, [pc, #52]	; (8000688 <LoopForever+0xe>)
  movs r3, #0
 8000652:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000654:	e002      	b.n	800065c <LoopCopyDataInit>

08000656 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000656:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000658:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800065a:	3304      	adds	r3, #4

0800065c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800065c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800065e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000660:	d3f9      	bcc.n	8000656 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000662:	4a0a      	ldr	r2, [pc, #40]	; (800068c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000664:	4c0a      	ldr	r4, [pc, #40]	; (8000690 <LoopForever+0x16>)
  movs r3, #0
 8000666:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000668:	e001      	b.n	800066e <LoopFillZerobss>

0800066a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800066a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800066c:	3204      	adds	r2, #4

0800066e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800066e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000670:	d3fb      	bcc.n	800066a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000672:	f000 f811 	bl	8000698 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000676:	f7ff ff7d 	bl	8000574 <main>

0800067a <LoopForever>:

LoopForever:
    b LoopForever
 800067a:	e7fe      	b.n	800067a <LoopForever>
  ldr   r0, =_estack
 800067c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000680:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000684:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000688:	08000700 	.word	0x08000700
  ldr r2, =_sbss
 800068c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000690:	2000001c 	.word	0x2000001c

08000694 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000694:	e7fe      	b.n	8000694 <ADC_IRQHandler>
	...

08000698 <__libc_init_array>:
 8000698:	b570      	push	{r4, r5, r6, lr}
 800069a:	4e0d      	ldr	r6, [pc, #52]	; (80006d0 <__libc_init_array+0x38>)
 800069c:	4c0d      	ldr	r4, [pc, #52]	; (80006d4 <__libc_init_array+0x3c>)
 800069e:	1ba4      	subs	r4, r4, r6
 80006a0:	10a4      	asrs	r4, r4, #2
 80006a2:	2500      	movs	r5, #0
 80006a4:	42a5      	cmp	r5, r4
 80006a6:	d109      	bne.n	80006bc <__libc_init_array+0x24>
 80006a8:	4e0b      	ldr	r6, [pc, #44]	; (80006d8 <__libc_init_array+0x40>)
 80006aa:	4c0c      	ldr	r4, [pc, #48]	; (80006dc <__libc_init_array+0x44>)
 80006ac:	f000 f818 	bl	80006e0 <_init>
 80006b0:	1ba4      	subs	r4, r4, r6
 80006b2:	10a4      	asrs	r4, r4, #2
 80006b4:	2500      	movs	r5, #0
 80006b6:	42a5      	cmp	r5, r4
 80006b8:	d105      	bne.n	80006c6 <__libc_init_array+0x2e>
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006c0:	4798      	blx	r3
 80006c2:	3501      	adds	r5, #1
 80006c4:	e7ee      	b.n	80006a4 <__libc_init_array+0xc>
 80006c6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006ca:	4798      	blx	r3
 80006cc:	3501      	adds	r5, #1
 80006ce:	e7f2      	b.n	80006b6 <__libc_init_array+0x1e>
 80006d0:	080006f8 	.word	0x080006f8
 80006d4:	080006f8 	.word	0x080006f8
 80006d8:	080006f8 	.word	0x080006f8
 80006dc:	080006fc 	.word	0x080006fc

080006e0 <_init>:
 80006e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006e2:	bf00      	nop
 80006e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006e6:	bc08      	pop	{r3}
 80006e8:	469e      	mov	lr, r3
 80006ea:	4770      	bx	lr

080006ec <_fini>:
 80006ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ee:	bf00      	nop
 80006f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f2:	bc08      	pop	{r3}
 80006f4:	469e      	mov	lr, r3
 80006f6:	4770      	bx	lr
